library(stats) 
library(plyr) 
library(dplyr)
#has to be in the above order

se <- function(x) sd(x)/sqrt(length(x))
# Define standard error 

data_summary <- function(DataFrame, varname, groupnames){
     summary_func <- function(x, col){
         c(mean = mean(x[[col]], na.rm=TRUE),
           se = se(x[[col]]))
     }
     data_sum<-ddply(DataFrame, groupnames, .fun=summary_func,
                     varname)
     data_sum <- rename(data_sum, c("mean" = varname))
     return(data_sum)
 }

#Inside data_summary function, there is one function that applies to each unit, then data_sum applies this unit function to all splited dataframe. 
#Could you incoporate t-test here, and return p-value in pd_df file? 

pd_df<- data_summary(pd_agg_family, varname="Abundance", 
                     groupnames=c("TreatmentWeek", "Family","Treatment","WeekTreatment"))
#groupnames carry all column you want into the new table

ggplot(pd_df, aes(x=TreatmentWeek, y=Abundance, fill=Family)) + geom_bar(stat="identity") + geom_errorbar(aes(ymin=Abundance-se, ymax=Abundance+se),width=.2, position=position_dodge(.9), alpha=.5) + facet_wrap("Family")+ coord_flip() + theme ()
                     
# Note, if it can't find the "Abundance", unload plyr and load again. It might be that dplyr masked plyr.
#Inside data_summary function, there is one function that applies to each unit, then data_sum applies this unit function to all splited dataframe. 
#Could you incoporate t-test here, and return p-value in pd_df file? 


ggplot(pd_df, aes(x=WeekTreatment, y=Abundance, fill=Family,  color=Treatment)) + geom_bar(stat="identity") + scale_color_manual (values=c("Grey","Black")) + geom_errorbar(aes(ymin=Abundance-se, ymax=Abundance+se),width=.2, position=position_dodge(.9), alpha=.5) + facet_wrap("Family")+ coord_flip() + theme () 
#scale_fill_manually () will allow you to change the color of the bar filling. 


#Can use Standard Deviation instead
data_summary_sd <- function(DataFrame, varname, groupnames){
     summary_func <- function(x, col){
         c(mean = mean(x[[col]], na.rm=TRUE),
           sd = sd(x[[col]], na.rm=TRUE))
     }
     data_sum<-ddply(DataFrame, groupnames, .fun=summary_func,
                     varname)
     data_sum <- rename(data_sum, c("mean" = varname))
     #change the name of "mean" to the varname that you apply
     return(data_sum)
 }


pd_dp <- data_summary(pd_agg_phylum, varname="Abundance", 
                     groupnames=c("TreatmentWeek", "Phylum"))
pd_dp$se<-pd_dp$sd/sqrt(7)
ggplot(pd_dp, aes(x=TreatmentWeek, y=Abundance, fill=Phylum)) + geom_bar(stat="identity") + geom_errorbar(aes(ymin=Abundance-se, ymax=Abundance+se),width=.2, position=position_dodge(.9), alpha=.5) + facet_wrap("Phylum")+ coord_flip() + theme ()
 
